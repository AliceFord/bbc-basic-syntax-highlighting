{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "BBC BASIC",
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#constants"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#entities"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.bbc",
					"match": "(ELSE|THEN|WHILE|CASE|ENDCASE|ENDWHILE|ENDIF|OTHERWISE|END|TO|SOUND|BPUT|CALL|CHAIN|CLEAR|CLOSE|CLG|CLS|DATA|DEF|DIM|DRAW|END|ENDPROC|ENVELOPE|FOR|GOSUB|GOTO|GCOL|IF|INPUT|LET|LOCAL|MODE|MOVE|NEXT|ON|VDU|PLOT|PRINT|PROC|READ|REPEAT|REPORT|REPORT$|RESTORE|RETURN|RUN|STOP|COLOUR|COLOR|TRACE|UNTIL|WIDTH|OSCLI)"
				},
				{
					"name": "keyword.operator.bbc",
					"match": "(AND|OR|DIV|MOD|EOR|=|\\+|-|\\/|\\*|~|\\^|<|>|\\?)"
				},
				{
					"name": "keyword.other.bbc",
					"match": "(PRINT|P\\.|CIRCLE|ELLIPSE|FILL|MOUSE|ORIGIN|QUIT|RECTANGLE|SWAP|SYS|TINT|WAIT|INSTALL|PRIVATE|BY|EXIT|ERROR|LINE|OFF|STEP|SPC|TAB|OPENIN|PTR|PAGE|TIME|TIME$|LOMEM|HIMEM|ABS|ACS|ADVAL|ASC|ASN|ATN|BGET|COS|COUNT|DEG|ERL|ERR|EVAL|EXP|EXT|FALSE|GET|INKEY|INSTR|INT|LEN|LN|LOG|NOT|OPENUP|OPENOUT|PI|POINT|POS|RAD|RND|SGN|SIN|SQR|TAN|TOP|TRUE|USR|VAL|VPOS|CHR$|GET$|INKEY$|LEFT$|MID$|RIGHT$|STR$|STRING$|A\\.|AU\\.|B\\.|BP\\.|CA\\.|CH\\.|CHR\\.|CL\\.|CLO\\.|C\\.|COU\\.|D\\.|DEL\\.|DR\\.|E\\.|EL\\.|END\\.|ENV\\.|EV\\.|FA\\.|F\\.|GC\\.|G\\.|H\\.|INK\\.|I\\.|INS\\.|L\\.|LO\\.|LOC\\.|LOM\\.|M\\.|MO\\.|MOV\\.|N\\.|O\\.|OP\\.|OPENO\\.|OPENU\\.|PA\\.|PL\\.|PO\\.|P\\.|PRO\\.|PT\\.|REA\\.|REN\\.|REP\\.|REPO\\.|RES\\.|R\\.|RI\\.|SA\\.|SO\\.|S\\.|STO\\.|STR\\.|STRI\\.|T\\.|TH\\.|TI\\.|TR\\.|U\\.|V\\.|VP\\.|W\\.)"
				}
			]
		},
		"constants": {
			"patterns": [
				{
					"name": "constant.numeric.bbc",
					"match": "([0-9]+)"
				}
			]			
		},
		"comments": {
			"patterns": [
				{
					"name": "comment.line.rem.bbc",
					"match": "REM.*$"
				}
			]
		},
		"strings": {
			"patterns": [
				{
					"name": "string.quoted.double.bbc",
					"begin": "\"",
					"end": "\"",
					"patterns": [
						{
							"name": "constant.character.escape.bbc",
							"match": "\\\\."
						}
					]
				}
			]
		},
		"entities": {
			"patterns": [
				{
					"match": "(FN)([a-zA-Z]\\w*)\\(",
					"captures": {
						"1": {
							"name": "keyword.other.bbc"
						},
						"2": {
							"name": "entity.name.function.bbc"
						}
					}
				}
			]
		}
	},
	"scopeName": "source.bbc"
}